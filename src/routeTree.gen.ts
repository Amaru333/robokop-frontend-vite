/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TutorialIndexRouteImport } from './routes/tutorial/index'
import { Route as TermsofserviceIndexRouteImport } from './routes/termsofservice/index'
import { Route as ProfileIndexRouteImport } from './routes/profile/index'
import { Route as OauthCallbackIndexRouteImport } from './routes/oauth-callback/index'
import { Route as GuideIndexRouteImport } from './routes/guide/index'
import { Route as ExploreIndexRouteImport } from './routes/explore/index'
import { Route as AnswerIndexRouteImport } from './routes/answer/index'
import { Route as ActivateUserIndexRouteImport } from './routes/activate-user/index'
import { Route as AboutIndexRouteImport } from './routes/about/index'
import { Route as ExploreDrugChemicalIndexRouteImport } from './routes/explore/drug-chemical/index'
import { Route as AnswerAnswer_idIndexRouteImport } from './routes/answer/$answer_id/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TutorialIndexRoute = TutorialIndexRouteImport.update({
  id: '/tutorial/',
  path: '/tutorial/',
  getParentRoute: () => rootRouteImport,
} as any)
const TermsofserviceIndexRoute = TermsofserviceIndexRouteImport.update({
  id: '/termsofservice/',
  path: '/termsofservice/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileIndexRoute = ProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const OauthCallbackIndexRoute = OauthCallbackIndexRouteImport.update({
  id: '/oauth-callback/',
  path: '/oauth-callback/',
  getParentRoute: () => rootRouteImport,
} as any)
const GuideIndexRoute = GuideIndexRouteImport.update({
  id: '/guide/',
  path: '/guide/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExploreIndexRoute = ExploreIndexRouteImport.update({
  id: '/explore/',
  path: '/explore/',
  getParentRoute: () => rootRouteImport,
} as any)
const AnswerIndexRoute = AnswerIndexRouteImport.update({
  id: '/answer/',
  path: '/answer/',
  getParentRoute: () => rootRouteImport,
} as any)
const ActivateUserIndexRoute = ActivateUserIndexRouteImport.update({
  id: '/activate-user/',
  path: '/activate-user/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutIndexRoute = AboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExploreDrugChemicalIndexRoute =
  ExploreDrugChemicalIndexRouteImport.update({
    id: '/explore/drug-chemical/',
    path: '/explore/drug-chemical/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AnswerAnswer_idIndexRoute = AnswerAnswer_idIndexRouteImport.update({
  id: '/answer/$answer_id/',
  path: '/answer/$answer_id/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutIndexRoute
  '/activate-user': typeof ActivateUserIndexRoute
  '/answer': typeof AnswerIndexRoute
  '/explore': typeof ExploreIndexRoute
  '/guide': typeof GuideIndexRoute
  '/oauth-callback': typeof OauthCallbackIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/termsofservice': typeof TermsofserviceIndexRoute
  '/tutorial': typeof TutorialIndexRoute
  '/answer/$answer_id': typeof AnswerAnswer_idIndexRoute
  '/explore/drug-chemical': typeof ExploreDrugChemicalIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutIndexRoute
  '/activate-user': typeof ActivateUserIndexRoute
  '/answer': typeof AnswerIndexRoute
  '/explore': typeof ExploreIndexRoute
  '/guide': typeof GuideIndexRoute
  '/oauth-callback': typeof OauthCallbackIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/termsofservice': typeof TermsofserviceIndexRoute
  '/tutorial': typeof TutorialIndexRoute
  '/answer/$answer_id': typeof AnswerAnswer_idIndexRoute
  '/explore/drug-chemical': typeof ExploreDrugChemicalIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about/': typeof AboutIndexRoute
  '/activate-user/': typeof ActivateUserIndexRoute
  '/answer/': typeof AnswerIndexRoute
  '/explore/': typeof ExploreIndexRoute
  '/guide/': typeof GuideIndexRoute
  '/oauth-callback/': typeof OauthCallbackIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/termsofservice/': typeof TermsofserviceIndexRoute
  '/tutorial/': typeof TutorialIndexRoute
  '/answer/$answer_id/': typeof AnswerAnswer_idIndexRoute
  '/explore/drug-chemical/': typeof ExploreDrugChemicalIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/activate-user'
    | '/answer'
    | '/explore'
    | '/guide'
    | '/oauth-callback'
    | '/profile'
    | '/termsofservice'
    | '/tutorial'
    | '/answer/$answer_id'
    | '/explore/drug-chemical'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/activate-user'
    | '/answer'
    | '/explore'
    | '/guide'
    | '/oauth-callback'
    | '/profile'
    | '/termsofservice'
    | '/tutorial'
    | '/answer/$answer_id'
    | '/explore/drug-chemical'
  id:
    | '__root__'
    | '/'
    | '/about/'
    | '/activate-user/'
    | '/answer/'
    | '/explore/'
    | '/guide/'
    | '/oauth-callback/'
    | '/profile/'
    | '/termsofservice/'
    | '/tutorial/'
    | '/answer/$answer_id/'
    | '/explore/drug-chemical/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutIndexRoute: typeof AboutIndexRoute
  ActivateUserIndexRoute: typeof ActivateUserIndexRoute
  AnswerIndexRoute: typeof AnswerIndexRoute
  ExploreIndexRoute: typeof ExploreIndexRoute
  GuideIndexRoute: typeof GuideIndexRoute
  OauthCallbackIndexRoute: typeof OauthCallbackIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  TermsofserviceIndexRoute: typeof TermsofserviceIndexRoute
  TutorialIndexRoute: typeof TutorialIndexRoute
  AnswerAnswer_idIndexRoute: typeof AnswerAnswer_idIndexRoute
  ExploreDrugChemicalIndexRoute: typeof ExploreDrugChemicalIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tutorial/': {
      id: '/tutorial/'
      path: '/tutorial'
      fullPath: '/tutorial'
      preLoaderRoute: typeof TutorialIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/termsofservice/': {
      id: '/termsofservice/'
      path: '/termsofservice'
      fullPath: '/termsofservice'
      preLoaderRoute: typeof TermsofserviceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/oauth-callback/': {
      id: '/oauth-callback/'
      path: '/oauth-callback'
      fullPath: '/oauth-callback'
      preLoaderRoute: typeof OauthCallbackIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guide/': {
      id: '/guide/'
      path: '/guide'
      fullPath: '/guide'
      preLoaderRoute: typeof GuideIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/explore/': {
      id: '/explore/'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/answer/': {
      id: '/answer/'
      path: '/answer'
      fullPath: '/answer'
      preLoaderRoute: typeof AnswerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/activate-user/': {
      id: '/activate-user/'
      path: '/activate-user'
      fullPath: '/activate-user'
      preLoaderRoute: typeof ActivateUserIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/explore/drug-chemical/': {
      id: '/explore/drug-chemical/'
      path: '/explore/drug-chemical'
      fullPath: '/explore/drug-chemical'
      preLoaderRoute: typeof ExploreDrugChemicalIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/answer/$answer_id/': {
      id: '/answer/$answer_id/'
      path: '/answer/$answer_id'
      fullPath: '/answer/$answer_id'
      preLoaderRoute: typeof AnswerAnswer_idIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutIndexRoute: AboutIndexRoute,
  ActivateUserIndexRoute: ActivateUserIndexRoute,
  AnswerIndexRoute: AnswerIndexRoute,
  ExploreIndexRoute: ExploreIndexRoute,
  GuideIndexRoute: GuideIndexRoute,
  OauthCallbackIndexRoute: OauthCallbackIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  TermsofserviceIndexRoute: TermsofserviceIndexRoute,
  TutorialIndexRoute: TutorialIndexRoute,
  AnswerAnswer_idIndexRoute: AnswerAnswer_idIndexRoute,
  ExploreDrugChemicalIndexRoute: ExploreDrugChemicalIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
