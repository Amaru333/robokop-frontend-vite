/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TutorialRouteImport } from './routes/tutorial'
import { Route as TermsofserviceRouteImport } from './routes/termsofservice'
import { Route as OauthCallbackRouteImport } from './routes/oauth-callback'
import { Route as GuideRouteImport } from './routes/guide'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProfileIndexRouteImport } from './routes/profile/index'
import { Route as ExploreIndexRouteImport } from './routes/explore/index'
import { Route as AnswerIndexRouteImport } from './routes/answer/index'
import { Route as ActivateUserIndexRouteImport } from './routes/activate-user/index'
import { Route as ExploreDrugChemicalIndexRouteImport } from './routes/explore/drug-chemical/index'
import { Route as AnswerAnswer_idIndexRouteImport } from './routes/answer/$answer_id/index'

const TutorialRoute = TutorialRouteImport.update({
  id: '/tutorial',
  path: '/tutorial',
  getParentRoute: () => rootRouteImport,
} as any)
const TermsofserviceRoute = TermsofserviceRouteImport.update({
  id: '/termsofservice',
  path: '/termsofservice',
  getParentRoute: () => rootRouteImport,
} as any)
const OauthCallbackRoute = OauthCallbackRouteImport.update({
  id: '/oauth-callback',
  path: '/oauth-callback',
  getParentRoute: () => rootRouteImport,
} as any)
const GuideRoute = GuideRouteImport.update({
  id: '/guide',
  path: '/guide',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileIndexRoute = ProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExploreIndexRoute = ExploreIndexRouteImport.update({
  id: '/explore/',
  path: '/explore/',
  getParentRoute: () => rootRouteImport,
} as any)
const AnswerIndexRoute = AnswerIndexRouteImport.update({
  id: '/answer/',
  path: '/answer/',
  getParentRoute: () => rootRouteImport,
} as any)
const ActivateUserIndexRoute = ActivateUserIndexRouteImport.update({
  id: '/activate-user/',
  path: '/activate-user/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExploreDrugChemicalIndexRoute =
  ExploreDrugChemicalIndexRouteImport.update({
    id: '/explore/drug-chemical/',
    path: '/explore/drug-chemical/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AnswerAnswer_idIndexRoute = AnswerAnswer_idIndexRouteImport.update({
  id: '/answer/$answer_id/',
  path: '/answer/$answer_id/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/guide': typeof GuideRoute
  '/oauth-callback': typeof OauthCallbackRoute
  '/termsofservice': typeof TermsofserviceRoute
  '/tutorial': typeof TutorialRoute
  '/activate-user': typeof ActivateUserIndexRoute
  '/answer': typeof AnswerIndexRoute
  '/explore': typeof ExploreIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/answer/$answer_id': typeof AnswerAnswer_idIndexRoute
  '/explore/drug-chemical': typeof ExploreDrugChemicalIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/guide': typeof GuideRoute
  '/oauth-callback': typeof OauthCallbackRoute
  '/termsofservice': typeof TermsofserviceRoute
  '/tutorial': typeof TutorialRoute
  '/activate-user': typeof ActivateUserIndexRoute
  '/answer': typeof AnswerIndexRoute
  '/explore': typeof ExploreIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/answer/$answer_id': typeof AnswerAnswer_idIndexRoute
  '/explore/drug-chemical': typeof ExploreDrugChemicalIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/guide': typeof GuideRoute
  '/oauth-callback': typeof OauthCallbackRoute
  '/termsofservice': typeof TermsofserviceRoute
  '/tutorial': typeof TutorialRoute
  '/activate-user/': typeof ActivateUserIndexRoute
  '/answer/': typeof AnswerIndexRoute
  '/explore/': typeof ExploreIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/answer/$answer_id/': typeof AnswerAnswer_idIndexRoute
  '/explore/drug-chemical/': typeof ExploreDrugChemicalIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/guide'
    | '/oauth-callback'
    | '/termsofservice'
    | '/tutorial'
    | '/activate-user'
    | '/answer'
    | '/explore'
    | '/profile'
    | '/answer/$answer_id'
    | '/explore/drug-chemical'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/guide'
    | '/oauth-callback'
    | '/termsofservice'
    | '/tutorial'
    | '/activate-user'
    | '/answer'
    | '/explore'
    | '/profile'
    | '/answer/$answer_id'
    | '/explore/drug-chemical'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/guide'
    | '/oauth-callback'
    | '/termsofservice'
    | '/tutorial'
    | '/activate-user/'
    | '/answer/'
    | '/explore/'
    | '/profile/'
    | '/answer/$answer_id/'
    | '/explore/drug-chemical/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  GuideRoute: typeof GuideRoute
  OauthCallbackRoute: typeof OauthCallbackRoute
  TermsofserviceRoute: typeof TermsofserviceRoute
  TutorialRoute: typeof TutorialRoute
  ActivateUserIndexRoute: typeof ActivateUserIndexRoute
  AnswerIndexRoute: typeof AnswerIndexRoute
  ExploreIndexRoute: typeof ExploreIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  AnswerAnswer_idIndexRoute: typeof AnswerAnswer_idIndexRoute
  ExploreDrugChemicalIndexRoute: typeof ExploreDrugChemicalIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/tutorial': {
      id: '/tutorial'
      path: '/tutorial'
      fullPath: '/tutorial'
      preLoaderRoute: typeof TutorialRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/termsofservice': {
      id: '/termsofservice'
      path: '/termsofservice'
      fullPath: '/termsofservice'
      preLoaderRoute: typeof TermsofserviceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/oauth-callback': {
      id: '/oauth-callback'
      path: '/oauth-callback'
      fullPath: '/oauth-callback'
      preLoaderRoute: typeof OauthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guide': {
      id: '/guide'
      path: '/guide'
      fullPath: '/guide'
      preLoaderRoute: typeof GuideRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/explore/': {
      id: '/explore/'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/answer/': {
      id: '/answer/'
      path: '/answer'
      fullPath: '/answer'
      preLoaderRoute: typeof AnswerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/activate-user/': {
      id: '/activate-user/'
      path: '/activate-user'
      fullPath: '/activate-user'
      preLoaderRoute: typeof ActivateUserIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/explore/drug-chemical/': {
      id: '/explore/drug-chemical/'
      path: '/explore/drug-chemical'
      fullPath: '/explore/drug-chemical'
      preLoaderRoute: typeof ExploreDrugChemicalIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/answer/$answer_id/': {
      id: '/answer/$answer_id/'
      path: '/answer/$answer_id'
      fullPath: '/answer/$answer_id'
      preLoaderRoute: typeof AnswerAnswer_idIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  GuideRoute: GuideRoute,
  OauthCallbackRoute: OauthCallbackRoute,
  TermsofserviceRoute: TermsofserviceRoute,
  TutorialRoute: TutorialRoute,
  ActivateUserIndexRoute: ActivateUserIndexRoute,
  AnswerIndexRoute: AnswerIndexRoute,
  ExploreIndexRoute: ExploreIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  AnswerAnswer_idIndexRoute: AnswerAnswer_idIndexRoute,
  ExploreDrugChemicalIndexRoute: ExploreDrugChemicalIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
